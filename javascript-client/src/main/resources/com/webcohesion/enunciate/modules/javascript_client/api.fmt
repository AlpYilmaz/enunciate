[#ftl]
[#--

    Copyright Â© 2006-2016 Web Cohesion (info@webcohesion.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

--]
[#-- @ftlvariable name="schemaTypes" type="java.util.List<com.webcohesion.enunciate.modules.jackson.model.TypeDefinition>" --]
[#-- @ftlvariable name="generatedCodeLicense" type="java.lang.String" --]
[#-- @ftlvariable name="jsFileName" type="java.lang.String" --]
[#-- @ftlvariable name="globalName" type="java.lang.String" --]
[#import "client-complex-type.fmt" as libComplexType/]
[#import "client-enum-type.fmt" as libEnumType/]
[@file name=jsFileName charset="utf-8"]
/**
 * ${(generatedCodeLicense!"")?replace("\n", "\n * ")}
 *
 * Generated by <a href="http://enunciate.webcohesion.com">Enunciate</a>.
 */
 
/**
 * UMD load definition that supports AMD, CommonJS and browser globals.
 * https://github.com/umdjs/umd/blob/992cc0d071b7ebcd7feaad2a5349bdbeab09a0fe/commonjsStrict.js
 */
(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['exports'], factory);
  } else if (typeof exports === 'object') {
    // CommonJS
    factory(exports);
  } else {
    // Browser globals
    factory(root.${globalName} = {});
  }
}(this, function (exports) {
 
 'use strict';
 
  [#list schemaTypes as typeDefinition]
    [#if !isFacetExcluded(typeDefinition)]
      [#if typeDefinition.enum]
        [@libEnumType.writeEnumType type=typeDefinition/]
      [#else]
        [@libComplexType.writeComplexType type=typeDefinition/]
      [/#if]
    [/#if]
  [/#list]
  
  /**
   * Ensures that a namespace exists.
   */
  function ensureNamespace(namespace){
    var current = exports;
    namespace.split('.').forEach(function(name){
      if(typeof current[name] === 'undefined'){
        current[name] = {};
      }
      current = current[name];
    });
  }

}));

[/@file]