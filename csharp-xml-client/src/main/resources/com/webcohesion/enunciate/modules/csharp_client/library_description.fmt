[#ftl]
[#--

    Copyright Â© 2006-2016 Web Cohesion (info@webcohesion.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

--]
[#-- @ftlvariable name="sample_resource" type="com.webcohesion.enunciate.api.resources.Method" --]
[#-- @ftlvariable name="sample_service_method" type="com.webcohesion.enunciate.modules.jaxws.model.WebMethod" --]
[#if sample_service_method??]

<p>
  The C# client-side library may be used to access the SOAP API for this application via the C# runtime.
</p>
[/#if]
[#if sample_resource??]

<p>
  The C# client-side library defines the classes that can be (de)serialized to/from XML.
  This is useful for accessing the HTTP resources that are published by this application.
</p>
[/#if]
[#if sample_service_method??]

<div class="panel panel-default">
  <div class="panel-heading">C# Service Example</div>
  <div class="panel-body">
    <pre class="prettyprint lang-java">
//instantiate a new service...
${sample_service_method.declaringEndpointInterface.clientSimpleName} service = new ${sample_service_method.declaringEndpointInterface.clientSimpleName}();

//make the remote call...
[#if sample_service_method.webResult?? && !sample_service_method.webResult.void]result = [/#if]service.${sample_service_method.clientSimpleName?cap_first}([#list sample_service_method.webParameters as param]${param.clientSimpleName}[#if param_has_next], [/#if][/#list]);

//handle the result as needed...
    </pre>
  </div>
</div>
[/#if]
[#if sample_resource?? && sample_resource.responseEntity??]

<div class="panel panel-default">
  <div class="panel-heading">C# Resource Example</div>
  <div class="panel-body">
    <pre class="prettyprint lang-csharp">
//read a resource from a REST url
Uri uri = new Uri(...);

XmlSerializer s = new XmlSerializer(
  typeof( ${classnameFor(sample_resource.responseEntity)?html} )
);

  //Create the request object
WebRequest req = WebRequest.Create(uri);
WebResponse resp = req.GetResponse();
Stream stream = resp.GetResponseStream();
TextReader r = new StreamReader( stream );

${classnameFor(sample_resource.responseEntity)?html} result = (${classnameFor(sample_resource.responseEntity)?html}) s.Deserialize( r );

//handle the result as needed...
    </pre>
  </div>
</div>
[/#if]