[#ftl]
[#--

    Copyright Â© 2006-2016 Web Cohesion (info@webcohesion.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

--]
[#import "csharp-metadata.fmt" as libCSharpMetadata/]
[#--template for the client-side simple type.--]
[#macro writeSimpleType type]
[#-- @ftlvariable name="type" type="com.webcohesion.enunciate.modules.jaxb.model.SimpleTypeDefinition" --]
namespace ${namespaceFor(type)} {

  /// <remarks>
  [#if type.javaDoc??]
  ///  ${((type.javaDoc.toString())!"(no documentation provided)")?chop_linebreak?html?replace("\n", "\n  ///  ")}
  [#else]
  ///  (no documentation provided)
  [/#if]
  /// </remarks>
  /// <summary>
  [#if type.javaDoc??]
  ///  ${((type.javaDoc.toString())!"(no documentation provided)")?chop_linebreak?html?replace("\n", "\n  ///  ")}
  [#else]
  ///  (no documentation provided)
  [/#if]
  /// </summary>
  [@libCSharpMetadata.writeTypeMetadata typeDef=type /]
  public [#if type.final]sealed [/#if]class ${type.clientSimpleName} {

  [#assign accessor=type.value/]
    private ${classnameFor(accessor)} _${accessor.clientSimpleName};
  [#if classnameFor(accessor)?ends_with("?")]
    private bool _${accessor.clientSimpleName}Specified;
  [/#if]

  [#assign cs_classname=classnameFor(accessor)/]
  [#if cs_classname?ends_with("?")]
    /// <summary>
    ///  ${(accessor.javaDoc.return!accessor.docValue!"(no documentation provided)")?chop_linebreak?html?replace("\n", "\n    ///  ")}
    /// </summary>
    [@libCSharpMetadata.writeAccessorMetadata accessor=accessor /]
    public ${cs_classname?substring(0, cs_classname?length  - 1)} ${accessor.clientSimpleName?cap_first} {
      get {
        return this._${accessor.clientSimpleName}.GetValueOrDefault();
      }
      set {
        this._${accessor.clientSimpleName} = value;
        this._${accessor.clientSimpleName}Specified = true;
      }
    }

    /// <summary>
    ///  Property for the XML serializer indicating whether the "${accessor.clientSimpleName?cap_first}" property should be included in the output.
    /// </summary>
    [System.Xml.Serialization.XmlIgnoreAttribute]
    [System.Xml.Serialization.SoapIgnoreAttribute]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    public bool ${accessor.clientSimpleName?cap_first}Specified {
      get {
        return this._${accessor.clientSimpleName}Specified;
      }
      set {
        this._${accessor.clientSimpleName}Specified = value;
      }
    }

  [#else]
    /// <summary>
    ///  ${(accessor.javaDoc.return!accessor.docValue!"(no documentation provided)")?chop_linebreak?html?replace("\n", "\n    ///  ")}
    /// </summary>
    [@libCSharpMetadata.writeAccessorMetadata accessor=accessor /]
    public ${cs_classname} ${accessor.clientSimpleName?cap_first} {
      get {
        return this._${accessor.clientSimpleName};
      }
      set {
        this._${accessor.clientSimpleName} = value;
      }
    }
    [#if !accessor.adapted && accessor.accessorType.enum]

    /// <summary>
    ///  Property for the XML serializer indicating whether the "${accessor.clientSimpleName?cap_first}" property should be included in the output.
    /// </summary>
    [System.Xml.Serialization.XmlIgnoreAttribute]
    [System.Xml.Serialization.SoapIgnoreAttribute]
    [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]
    public bool ${accessor.clientSimpleName?cap_first}Specified {
      get {
        return this._${accessor.clientSimpleName} != ${cs_classname}.NULL;
      }
      set {
        if (!value) {
          this._${accessor.clientSimpleName} = ${cs_classname}.NULL;
        }
      }
    }
    [/#if]
  [/#if]
  }
}
[/#macro]