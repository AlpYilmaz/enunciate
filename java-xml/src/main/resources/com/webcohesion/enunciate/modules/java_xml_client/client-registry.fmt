[#ftl]
[#-- @ftlvariable name="registry" type="com.webcohesion.enunciate.modules.jaxb.model.Registry" --]
[#-- @ftlvariable name="generatedCodeLicense" type="java.lang.String" --]
[#--template for the client-side complex type.--]
[@file name="ObjectFactory.java" package=packageFor(registry) charset="utf-8"]
/**
 * ${(generatedCodeLicense!"")?replace("\n", "\n * ")}
 *
 * Generated by <a href="http://enunciate.codehaus.org">Enunciate</a>.
 */
package ${packageFor(registry)};

@javax.xml.bind.annotation.XmlRegistry
public class ObjectFactory {

  public ObjectFactory() {
  }
  [#list registry.instanceFactoryMethods as instanceFactoryMethod]
    [#assign typeFqn=classnameFor(instanceFactoryMethod.returnType)/]
    [#assign simpleBeanName=typeFqn[(typeFqn?last_index_of(".") + 1)..]/]

  public ${typeFqn} create${simpleBeanName}() {
    return new ${typeFqn}();
  }
  [/#list]
  [#list registry.localElementDeclarations as localElementDeclaration]

  @javax.xml.bind.annotation.XmlElementDecl(namespace = "${localElementDeclaration.namespace!""}", name = "${localElementDeclaration.name}"[#if localElementDeclaration.elementScope??], scope = ${localElementDeclaration.elementScope.qualifiedName}.class[/#if][#if localElementDeclaration.substitutionHeadName??], substitutionHeadName = "${localElementDeclaration.substitutionHeadName}", substitutionHeadNamespace="${localElementDeclaration.substitutionHeadNamespace}"[/#if][#if localElementDeclaration.defaultValue??], defaultValue = "${localElementDeclaration.defaultValue}"[/#if])
  public javax.xml.bind.JAXBElement<${classnameFor(localElementDeclaration.elementType)}> create[#if localElementDeclaration.elementScope??]${localElementDeclaration.elementScope.simpleName}[/#if]${localElementDeclaration.name?cap_first}(${classnameFor(localElementDeclaration.elementType)} value) {
    return new javax.xml.bind.JAXBElement<${classnameFor(localElementDeclaration.elementType)}>(new javax.xml.namespace.QName("${localElementDeclaration.namespace!""}","${localElementDeclaration.name}"), ${classnameFor(localElementDeclaration.elementType)}.class, [#if localElementDeclaration.elementScope??]${localElementDeclaration.elementScope.qualifiedName}.class[#else]null[/#if], value);
  }
  [/#list]
}
[/@file]