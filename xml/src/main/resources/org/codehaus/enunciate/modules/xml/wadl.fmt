[#ftl]
[#-- @ftlvariable name="resources" type="java.util.Collection<org.codehaus.enunciate.contract.jaxrs.ResourceMethod>" --]
[#-- @ftlvariable name="resource" type="org.codehaus.enunciate.contract.jaxrs.ResourceMethod" --]
[#--
Template library for WADL.
--]

[#--
  The processWadl macro outputs a given WADL.

  @param wadlResources The applicable resources.  (list of org.codehaus.enunciate.contract.jaxrs.RootResource)
--]
[#macro processWadl]
[#-- assign the prefix variable for the "this" namespace --]
[#assign wadl=prefix("http://wadl.dev.java.net/2009/02")]
[#-- assign the prefix variable for the schema namespace --]
[#assign xs=prefix("http://www.w3.org/2001/XMLSchema")]
[#t]
<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
[#if wadlStylesheetUri??]
<?xml-stylesheet type="text/xsl" href="${wadlStylesheetUri}"?>
[/#if]
<${wadl}:application xmlns:${wadl}="http://wadl.dev.java.net/2009/02" xmlns:${xs}="http://www.w3.org/2001/XMLSchema">

  <${wadl}:doc xmlns:enunciate="http://enunciate.codehaus.org/" enunciate:generatedBy="Enunciate-1.24"/>
  
  <${wadl}:grammars>
    [@forEachSchema]
    <${wadl}:include href="${schema.filename}"/>
    [/@forEachSchema]
  </${wadl}:grammars>

  <${wadl}:resources base="${baseDeploymentAddress}">
    [@forEachResourceMethodListByPath includeExcludedFromDocs="true" includeExcludedFromIDL="false"]

    <${wadl}:resource path="${(resources?first).metaData.defaultSubcontext!"/rest"}[#if !(resources?first).fullpath?starts_with("/")]/[/#if]${(resources?first).fullpath}">
      [#list (resources?first).resourceParameters as parameter]
        [#if parameter.pathParam!false]
      <${wadl}:param name="${parameter.parameterName}" style="${parameter.typeName!false}">
          [#if parameter.docValue??]
        <${wadl}:doc><![CDATA[${parameter.docValue}]]></${wadl}:doc>
          [/#if]
      </${wadl}:param>
        [/#if]
      [/#list]
      [#list resources as resource]
        [@handleResourceMethod resource=resource contentTypes=uniqueContentTypes(resource)/]
      [/#list]
    </${wadl}:resource>
      [#list resources as resource]
        [#list uniqueContentTypes(resource) as contentType]
          [#if contentType.subcontexts??]
            [#list contentType.subcontexts as subcontext]

    <${wadl}:resource path="${subcontext}${resource.fullpath}">
              [#list resource.resourceParameters as parameter]
                [#if parameter.pathParam!false]
                  [#assign paramstyle=parameter.typeName!"plain"/]
                  [#if paramstyle = "path"]
                    [#assign paramstyle="template"/]
                  [/#if]
      <${wadl}:param name="${parameter.parameterName}" style="${paramstyle?lower_case}">
                  [#if parameter.docValue??]
        <${wadl}:doc><![CDATA[${parameter.docValue}]]></${wadl}:doc>
                  [/#if]
      </${wadl}:param>
                [/#if]
              [/#list]
      [@handleResourceMethod resource=resource contentTypes=[contentType]/]
    </${wadl}:resource>
            [/#list]
          [/#if]
        [/#list]
      [/#list]
    [/@forEachResourceMethodListByPath]
  </${wadl}:resources>
</${wadl}:application>
[/#macro]

[#macro handleResourceMethod resource contentTypes]
  [#list resource.httpMethods as operation]
    [#--[#if !isExcludeFromIDL(operation)]--]
      <${wadl}:method name="${operation}">
      [#if resource.docValue??]
        <${wadl}:doc><![CDATA[${resource.docValue}]]></${wadl}:doc>
      [/#if]
      [#if ((resource.resourceParameters?size > 0) || (resource.entityParameter??))]
        <${wadl}:request>
        [#if resource.entityParameter??]
          [#if resource.entityParameter.docValue??]
          <${wadl}:doc><![CDATA[${resource.entityParameter.docValue}]]></${wadl}:doc>
          [/#if]
          [#list contentTypes as contentType]
            [#if contentType.consumable]
          <${wadl}:representation mediaType="${contentType.type}"[#if resource.entityParameter.xmlElement?? && (contentType.type = "*/*" || contentType.type?ends_with("xml"))] element="[#if resource.entityParameter.xmlElement.namespace?? && resource.entityParameter.xmlElement.namespace != ""]${prefix(resource.entityParameter.xmlElement.namespace)}:[/#if]${resource.entityParameter.xmlElement.name}"[#if resource.entityParameter.xmlElement.namespace?? && resource.entityParameter.xmlElement.namespace != ""] xmlns:${prefix(resource.entityParameter.xmlElement.namespace)}="${resource.entityParameter.xmlElement.namespace}"[/#if][/#if]/>
            [/#if]
          [/#list]
        [/#if]
        [#list resource.resourceParameters as parameter]
          [#if parameter.queryParam!false || parameter.headerParam!false]
          <${wadl}:param name="${parameter.parameterName}" style="${parameter.typeName!"custom"}">
            [#if parameter.docValue??]
            <${wadl}:doc><![CDATA[${parameter.docValue}]]></${wadl}:doc>
            [/#if]
          </${wadl}:param>
          [/#if]
        [/#list]
        </${wadl}:request>
      [/#if]
      [#if resource.representationMetadata??]
        <${wadl}:response>
        [#if resource.representationMetadata.docValue??]
          <${wadl}:doc><![CDATA[${resource.representationMetadata.docValue}]]></${wadl}:doc>
        [/#if]
        [#list contentTypes as contentType]
          [#if contentType.produceable]
          <${wadl}:representation mediaType="${contentType.type}"[#if resource.representationMetadata.xmlElement?? && (contentType.type = "*/*" || contentType.type?ends_with("xml"))] element="[#if resource.representationMetadata.xmlElement.namespace?? && resource.representationMetadata.xmlElement.namespace != ""]${prefix(resource.representationMetadata.xmlElement.namespace)}:[/#if]${resource.representationMetadata.xmlElement.name}"[#if resource.representationMetadata.xmlElement.namespace?? && resource.representationMetadata.xmlElement.namespace != ""] xmlns:${prefix(resource.representationMetadata.xmlElement.namespace)}="${resource.representationMetadata.xmlElement.namespace}"[/#if][/#if]/>
          [/#if]
        [/#list]
        </${wadl}:response>
      [/#if]
      </${wadl}:method>
    [#--[/#if]--]
  [/#list]
[/#macro]