[#ftl]
[#--

    Copyright Â© 2006-2016 Web Cohesion (info@webcohesion.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

--]
[#-- @ftlvariable name="schemaTypes" type="java.util.List<com.webcohesion.enunciate.modules.jaxb.model.TypeDefinition>" --]
[#-- @ftlvariable name="objcBaseName" type="java.lang.String" --]
[#-- @ftlvariable name="separateCommonCode" type="java.lang.Boolean" --]
[#import "client-complex-type.fmt" as libComplexType/]
[#import "client-enum-type.fmt" as libEnumType/]
[#import "common.fmt" as libCommon/]
[#if separateCommonCode!false]
  [@file name=("enunciate-common.h") charset="utf-8"]
    [@libCommon.writeCommonHeader /]
  [/@file]
  [@file name=("enunciate-common.m") charset="utf-8"]
#import "enunciate-common.h"
    [@libCommon.writeCommonImpl /]
  [/@file]
[/#if]

[@file name=(objcBaseName + ".h") charset="utf-8"]
  [#if separateCommonCode!false]
#import "enunciate-common.h"
  [#else]
    [@libCommon.writeCommonHeader /]
  [/#if]
  [#list schemaTypes as typeDefinition]
    [#if !isFacetExcluded(typeDefinition)]
      [#if typeDefinition.enum]
        [@libEnumType.writeEnumTypeHeader type=typeDefinition/]
      [/#if]
    [/#if]
  [/#list]

  [#list schemaTypes as typeDefinition]
    [#if !isFacetExcluded(typeDefinition)]
      [#if !typeDefinition.enum]
@class ${nameForTypeDefinition(typeDefinition)};
      [/#if]
    [/#if]
  [/#list]

  [#list schemaTypes as typeDefinition]
    [#if !isFacetExcluded(typeDefinition)]
      [#if !typeDefinition.enum]
        [@libComplexType.writeComplexTypeHeader type=typeDefinition/]
      [/#if]
    [/#if]
  [/#list]
[/@file]

[@file name=(objcBaseName + ".m") charset="utf-8"]
#import "${objcBaseName}.h"
  [#if separateCommonCode!false]
  [#else]
    [@libCommon.writeCommonImpl /]
  [/#if]
[#list schemaTypes as typeDefinition]
  [#if !isFacetExcluded(typeDefinition)]
    [#if typeDefinition.enum]
      [@libEnumType.writeEnumTypeImpl type=typeDefinition/]
    [#else]
      [@libComplexType.writeComplexTypeImpl type=typeDefinition/]
    [/#if]
  [/#if]
[/#list]
[/@file]
