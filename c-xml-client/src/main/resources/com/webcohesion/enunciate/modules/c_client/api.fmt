[#ftl]
[#--

    Copyright Â© 2006-2016 Web Cohesion (info@webcohesion.com)

    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at

        http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

--]
[#-- @ftlvariable name="cFileName" type="java.lang.String" --]
[#-- @ftlvariable name="separateCommonCode" type="java.lang.Boolean" --]
[#-- @ftlvariable name="schemas" type="java.util.List<com.webcohesion.enunciate.modules.jaxb.model.SchemaInfo>" --]
[#import "client-complex-type.fmt" as libComplexType/]
[#import "client-enum-type.fmt" as libEnumType/]
[#import "client-qname-enum-type.fmt" as libQNameEnumType/]
[#import "common.fmt" as libCommon/]
[#if separateCommonCode!false]
  [@file name=("enunciate-common.c") charset="utf-8"]
    [@libCommon.writeCommonHeader /]
  [/@file]
[/#if]
[@file name=cFileName charset="utf-8"]
  [#if separateCommonCode!false]
#include <enunciate-common.c>
  [#else]
    [@libCommon.writeCommonHeader /]
  [/#if]
  [#list schemas as schema]
    [#list schema.typeDefinitions as typeDefinition]
      [#if !isFacetExcluded(typeDefinition)]
        [#if !typeDefinition.abstract]
          [#if typeDefinition.enum]
            [#if typeDefinition.QNameEnum!false]
              [@libQNameEnumType.writeEnumTypeHeader type=typeDefinition/]
            [#else]
              [@libEnumType.writeEnumTypeHeader type=typeDefinition/]
            [/#if]
          [#else]
            [@libComplexType.writeComplexTypeHeader type=typeDefinition/]
          [/#if]
        [/#if]
      [/#if]
    [/#list]
  [/#list]
  [#list schemas as schema]
    [#list schema.typeDefinitions as typeDefinition]
      [#if !isFacetExcluded(typeDefinition)]
        [#if !typeDefinition.abstract]
          [#if typeDefinition.enum]
            [#if typeDefinition.QNameEnum!false]
              [@libQNameEnumType.writeEnumTypeImpl type=typeDefinition/]
            [#else]
              [@libEnumType.writeEnumTypeImpl type=typeDefinition/]
            [/#if]
          [#else]
            [@libComplexType.writeComplexTypeImpl type=typeDefinition/]
          [/#if]
        [/#if]
      [/#if]
    [/#list]
  [/#list]
[/@file]
