[#ftl]
[#-- @ftlvariable name="type" type="com.webcohesion.enunciate.modules.jackson.model.TypeDefinition" --]
[#-- @ftlvariable name="generatedCodeLicense" type="java.lang.String" --]
[#--template for the client-side complex type.--]
[@file name=(type.simpleName + ".java")  package=packageFor(type) charset="utf-8"]
[#assign baseobject=type.baseObject/]
/**
 * ${(generatedCodeLicense!"")?replace("\n", "\n * ")}
 *
 * Generated by <a href="http://enunciate.codehaus.org">Enunciate</a>.
 */
package ${packageFor(type)};

/**
 * ${type.docComment!"(no documentation provided)"?chop_linebreak?replace("\n", "\n * ")}
 */
public class ${simpleNameFor(type)} [#if !baseobject]extends ${classnameFor(type.superclass)} [#else]extends com.google.gwt.core.client.JavaScriptObject [/#if]{

  protected ${type.simpleName}() {
  }
  [#if type.value??]
[@memberAccessors member=type.value/]
  [#else]
    [#list type.members as member]
[@memberAccessors member=member/]
    [/#list]
  [/#if]
  [#if !(type.abstract!false)]

  /**
   * Create an instance of ${simpleNameFor(type, false)} from JSON text.
   */
  public static native ${simpleNameFor(type, false)} fromJson(String json) /*-{
    return eval('(' + json + ')');
  }-*/;
  [/#if]
}
[/@file]
[#macro memberAccessors member]
  [#-- @ftlvariable name="member" type="com.webcohesion.enunciate.modules.jackson.model.Member" --]
  [#if (!isFacetExcluded(member))]
    [#if member.accessorType.enum!false]

  /**
   * ${(member.javaDoc.return!member.docValue!"(no documentation provided)")?chop_linebreak?replace("\n", "\n   * ")}
   */
  public final ${classnameFor(member)} get${member.simpleName.toString()?cap_first}() {
    return ${classnameFor(member)}.fromString(get${member.simpleName.toString()?cap_first}Internal());
  }

  /**
   * ${(member.javaDoc.return!member.docValue!"(no documentation provided)")?chop_linebreak?replace("\n", "\n   * ")}
   */
  public final void set${member.simpleName.toString()?cap_first}(${classnameFor(member)} ${member.simpleName}) {
    set${member.simpleName.toString()?cap_first}Internal(${member.simpleName} == null ? null : ${member.simpleName}.toString());
  }

  /**
   * Internal (native) getter for the enum property ${member.simpleName}.
   */
  private final native String get${member.simpleName.toString()?cap_first}Internal() /*-{
    return this.${member.name};
  }-*/;

  /**
   * Internal (native) setter for the enum property ${member.simpleName}.
   */
  private final native void set${member.simpleName.toString()?cap_first}Internal(String ${member.simpleName}) /*-{
    this.${member.name} = ${member.simpleName};
  }-*/;
    [#elseif member.bareAccessorType.enum!false]

  /**
   * ${(member.javaDoc.return!member.docValue!"(no documentation provided)")?chop_linebreak?replace("\n", "\n   * ")}
   */
  public final ${classnameFor(member.bareAccessorType)}[] get${member.simpleName.toString()?cap_first}() {
    com.google.gwt.core.client.JsArrayString _rawItems = get${member.simpleName.toString()?cap_first}Internal();
    ${classnameFor(member.bareAccessorType)}[] _items = new ${classnameFor(member.bareAccessorType)}[_rawItems.length()];
    for (int i = 0; i < _rawItems.length(); i++) {
      _items[i] = ${classnameFor(member.bareAccessorType)}.fromString(_rawItems.get(i));
    }
    return _items;
  }

  /**
   * ${(member.javaDoc.return!member.docValue!"(no documentation provided)")?chop_linebreak?replace("\n", "\n   * ")}
   */
  public final void set${member.simpleName.toString()?cap_first}(${classnameFor(member.bareAccessorType)}[] ${member.simpleName}) {
    com.google.gwt.core.client.JsArrayString _rawItems = (com.google.gwt.core.client.JsArrayString) com.google.gwt.core.client.JavaScriptObject.createArray();
    for (int i = 0; i < ${member.simpleName}.length; i++) {
      _rawItems.set(i, ${member.simpleName}[i] == null ? null : ${member.simpleName}[i].toString());
    }
    set${member.simpleName.toString()?cap_first}Internal(_rawItems);
  }

  /**
   * Internal (native) getter for the enum property ${member.simpleName}.
   */
  private final native com.google.gwt.core.client.JsArrayString get${member.simpleName.toString()?cap_first}Internal() /*-{
    return this.${member.name};
  }-*/;

  /**
   * Internal (native) setter for the enum property ${member.simpleName}.
   */
  private final native void set${member.simpleName.toString()?cap_first}Internal(com.google.gwt.core.client.JsArrayString ${member.simpleName}) /*-{
    this.${member.name} = ${member.simpleName};
  }-*/;
    [#elseif isAccessorOfTypeLong(member)]

  /**
   * ${(member.javaDoc.return!member.docValue!"(no documentation provided)")?chop_linebreak?replace("\n", "\n   * ")}
   */
  public final native Long get${member.simpleName.toString()?cap_first}() /*-{
    return (this.${member.name} == null ? null : @java.lang.Long::valueOf(Ljava/lang/String;)(this.${member.name} + ''));
  }-*/;

  /**
   * ${(member.javaDoc.return!member.docValue!"(no documentation provided)")?chop_linebreak?replace("\n", "\n   * ")}
   */
  public final native void set${member.simpleName.toString()?cap_first}(${classnameFor(member)} ${member.simpleName}) /*-{
    this.${member.name} = (${member.simpleName} == null ? null : (+(@java.lang.String::valueOf(Ljava/lang/Object;)(${member.simpleName}))));
  }-*/;
    [#else]

  /**
   * ${(member.javaDoc.return!member.docValue!"(no documentation provided)")?chop_linebreak?replace("\n", "\n   * ")}
   */
  public final native ${classnameFor(member)} get${member.simpleName.toString()?cap_first}() /*-{
    return this.${member.name};
  }-*/;

  /**
   * ${(member.javaDoc.return!member.docValue!"(no documentation provided)")?chop_linebreak?replace("\n", "\n   * ")}
   */
  public final native void set${member.simpleName.toString()?cap_first}(${classnameFor(member)} ${member.simpleName}) /*-{
    this.${member.name} = ${member.simpleName};
  }-*/;
      [#if member.referencesQNameEnum!false]

  /**
   * Convenience accessor for the known value of a ${member.simpleName} property.
   *
   * @see ${classnameFor(member.QNameEnumRef)}#convertFromKnownQName
   */
  public final ${classnameFor(member.QNameEnumRef)} getKnown${member.simpleName.toString()?cap_first}() {
    return ${classnameFor(member.QNameEnumRef)}.convertFromKnownQName(get${member.simpleName.toString()?cap_first}());
  }

  /**
   * Convenience accessor for the known value of a ${member.simpleName} property.
   *
   * @see ${classnameFor(member.QNameEnumRef)}#convertToKnownQName
   */
  public final void setKnown${member.simpleName.toString()?cap_first}(${classnameFor(member.QNameEnumRef)} ${member.simpleName}) {
    set${member.simpleName.toString()?cap_first}(${classnameFor(member.QNameEnumRef)}.convertToKnownQName(${member.simpleName}));
  }
      [/#if]
    [/#if]
  [/#if]
[/#macro]