[#ftl]
[#-- @ftlvariable name="type" type="com.webcohesion.enunciate.modules.jackson.model.EnumTypeDefinition" --]
[#-- @ftlvariable name="generatedCodeLicense" type="java.lang.String" --]
[#--template for the client-side enum type.--]
[@file name=(type.simpleName + ".java")  package=packageFor(type) charset="utf-8"]
/**
 * ${(generatedCodeLicense!"")?replace("\n", "\n * ")}
 *
 * Generated by <a href="http://enunciate.webcohesion.com">Enunciate</a>.
 */
package ${packageFor(type)};

/**
 * ${type.docComment!"(no documentation provided)"?chop_linebreak?replace("\n", "\n * ")}
 */
public enum ${type.simpleName} {
  [#assign enumValueMap=type.enumValues/]
  [#assign unknownQNameEnum = ""/]
  [#list type.enumConstants as constant]
    [#-- @ftlvariable name="constant" type="com.webcohesion.enunciate.javac.decorations.element.DecoratedVariableElement" --]
    [#if !(enumValueMap[constant.simpleName]??)]
      [#assign unknownQNameEnum = constant.simpleName/]
    [/#if]

  /**
   * ${constant.docComment!"(no documentation provided)"?chop_linebreak?replace("\n", "\n   * ")}
   */
  ${constant.simpleName}[#if constant_has_next],[#else];[/#if]
  [/#list]
  [#if type.QNameEnum!false]
    [#-- @ftlvariable name="type" type="com.webcohesion.enunciate.modules.jackson.model.QNameEnumTypeDefinition" --]

  /**
   * Convert this enum to a QName.
   *
   */
  public String toQName() {
    return convertToKnownQName(this);
  }

  /**
   * Convert a String to a ${type.simpleName}. If the String is not a known QName, [#if unknownQNameEnum != ""]${type.simpleName}.${unknownQNameEnum}[#else]null[/#if] will be returned.
   */
  public static ${type.simpleName} convertFromKnownQName(String qname) {
    if (qname == null) {
      return null;
    }
    [#list type.enumConstants as constant]
      [#if enumValueMap[constant.simpleName]??]
    if ("${enumValueMap[constant.simpleName]}".equals(qname.toString())) {
      return ${type.simpleName}.${constant.simpleName};
    }
      [/#if]
    [/#list]
    return [#if unknownQNameEnum != ""]${type.simpleName}.${unknownQNameEnum}[#else]null[/#if];
  }

  /**
   * Convert a ${type.simpleName} to a QName.
   *
    [#if unknownQNameEnum != ""]
   * @throws IllegalArgumentException If ${type.simpleName}.${unknownQNameEnum} is passed.
    [/#if]
   */
  public static String convertToKnownQName(${type.simpleName} value) {
    if (value == null) {
      return null;
    }
    switch (value) {
    [#list type.enumConstants as constant]
      [#if enumValueMap[constant.simpleName]??]
      case ${constant.simpleName}:
        return "${enumValueMap[constant.simpleName]}";
      [/#if]
    [/#list]
      default:
        throw new IllegalArgumentException("No known QName for: " + value);
    }
  }
  [/#if]
}
[/@file]